const quizData = {
  html: {
     easy: [
      { question: "What does HTML stand for?", options: ["Hyper Text Markup Language", "Home Tool Markup Language", "Hyperlinks and Text Markup Language"], answer: "Hyper Text Markup Language" },
      { question: "Choose the correct HTML element for the largest heading:", options: ["<heading>", "<h6>", "<h1>"], answer: "<h1>" },
      { question: "What is the correct HTML element for inserting a line break?", options: ["<break>", "<br>", "<lb>"], answer: "<br>" },
      { question: "Which character is used to indicate an end tag?", options: ["/", "<", "^"], answer: "/" },
      { question: "HTML tags are used to describe document:", options: ["Definition", "Structure", "Language"], answer: "Structure" },
      { question: "Whatâ€™s the correct HTML element to define important text?", options: ["<strong>", "<b>", "<i>"], answer: "<strong>" },
      { question: "Which HTML element is used for the largest heading?", options: ["<head>", "<h6>", "<h1>"], answer: "<h1>" },
      { question: "An HTML document must start with?", options: ["<!DOCTYPE html>", "<html>", "<doc>"], answer: "<!DOCTYPE html>" },
      { question: "Which tag is used to add a background color?", options: ["<bgcolor>", "<body style='background-color:'>", "<background>"], answer: "<body style='background-color:'>" },
      { question: "HTML comments start with:", options: ["<!--", "//", "/*"], answer: "<!--" },
      { question: "Which element defines navigation links?", options: ["<nav>", "<navigation>", "<menu>"], answer: "<nav>" },
      { question: "What is the correct HTML element for playing video files?", options: ["<media>", "<video>", "<movie>"], answer: "<video>" },
      { question: "Which attribute is used to specify the URL of an image?", options: ["src", "href", "link"], answer: "src" },
      { question: "Which is the correct way to open a link in a new tab?", options: ["<a href='url' target='_blank'>", "<a new>","<a href='url' new>"], answer: "<a href='url' target='_blank'>" },
      { question: "How do you define an unordered list?", options: ["<ul>", "<ol>", "<list>"], answer: "<ul>" },
    ],
    medium: [
      { question: "Which element is used to structure text in a paragraph?", options: ["<p>", "<text>", "<para>"], answer: "<p>" },
      { question: "How do you create a hyperlink in HTML?", options: ["<a href='url'>link</a>", "<link src='url'>", "<hyperlink url='url'>"], answer: "<a href='url'>link</a>" },
      { question: "Which tag adds a numbered list?", options: ["<ol>", "<ul>", "<li>"], answer: "<ol>" },
      { question: "What does the alt attribute in <img> provide?", options: ["Alternate text", "Alignment", "Audio"], answer: "Alternate text" },
      { question: "Which tag is used to define a table row?", options: ["<tr>", "<td>", "<table>"], answer: "<tr>" },
      { question: "Which tag defines a table header cell?", options: ["<th>", "<hr>", "<td>"], answer: "<th>" },
      { question: "What does <iframe> do?", options: ["Embeds another HTML page", "Creates a frame border", "Defines floating layouts"], answer: "Embeds another HTML page" },
      { question: "Which attribute provides inline styling color?", options: ["style", "font", "color"], answer: "style" },
      { question: "Which meta tag defines character set?", options: ["<meta charset='UTF-8'>", "<meta encoding='UTF-8'>", "<meta chars='UTF-8'>"], answer: "<meta charset='UTF-8'>" },
      { question: "What tag groups options in a dropdown list?", options: ["<optgroup>", "<group>", "<options>"], answer: "<optgroup>" },
      { question: "Which element creates an unordered list?", options: ["<ul>", "<ol>", "<list>"], answer: "<ul>" },
      { question: "To embed audio, which tag is used?", options: ["<audio>", "<sound>", "<music>"], answer: "<audio>" },
      { question: "Which attribute specifies the linked stylesheet?", options: ["href", "src", "link"], answer: "href" },
      { question: "Which tag defines a sentence in the head section?", options: ["<head>", "<header>", "<head>"], answer: "<head>" },
      { question: "Which tag defines an HTML form?", options: ["<form>", "<input>", "<fieldset>"], answer: "<form>" },
    ],
    hard: [
      { question: "What does 'semantic HTML' refer to?", options: ["Clearly describes meaning for both browser and developer", "Visually attractive tags", "Behavior styled tags"], answer: "Clearly describes meaning for both browser and developer" },
      { question: "Which element is used to define self-contained content?", options: ["<article>", "<section>", "<div>"], answer: "<article>" },
      { question: "What's the use of the 'dl' tag?", options: ["Definition list", "Data list", "Details list"], answer: "Definition list" },
      { question: "Which doctype is used for HTML5?", options: ["<!DOCTYPE html>", "<!DOCTYPE HTML PUBLIC>", "<!DOCTYPE html5>"], answer: "<!DOCTYPE html>" },
      { question: "Which attribute is used for datasets in HTML5?", options: ["data-*", "dataset", "meta-*"], answer: "data-*" },
      { question: "Which tag groups form controls in HTML5?", options: ["<fieldset>", "<formgroup>", "<groupfield>"], answer: "<fieldset>" },
      { question: "Which tag provides a caption for a table?", options: ["<caption>", "<title>", "<figcaption>"], answer: "<caption>" },
      { question: "What's the purpose of 'aria-label'?", options: ["Accessibility support", "Visual styling", "Tracking"], answer: "Accessibility support" },
      { question: "Which tag defines base URL for all relative forms?", options: ["<base>", "<link>", "<meta>"], answer: "<base>" },
      { question: "Which element is used for page footer content?", options: ["<footer>", "<section>", "<aside>"], answer: "<footer>" },
      { question: "Difference between <b> vs <strong>?", options: ["<strong> has semantic importance", "Both are same", "<b> is semantic"], answer: "<strong> has semantic importance" },
      { question: "Which tag defines navigation section?", options: ["<nav>", "<menu>", "<navigation>"], answer: "<nav>" },
      { question: "Which meta tag is used for responsive design?", options: ["<meta name='viewport' content='width=device-width, initial-scale=1'>", "<meta responsive>", "<meta name='screen'>"], answer: "<meta name='viewport' content='width=device-width, initial-scale=1'>" },
      { question: "What tag categorizes inline quote?", options: ["<q>", "<blockquote>", "<cite>"], answer: "<q>" },
      { question: "Which tag is used for subscript text?", options: ["<sub>", "<sup>", "<small>"], answer: "<sub>" },
    ],
  },
  css: {
   easy: [
      { question: "What does CSS stand for?", options: ["Cascading Style Sheets", "Creative Style System", "Computer Style Syntax"], answer: "Cascading Style Sheets" },
      { question: "How do you change the text color of an element in CSS?", options: ["color:", "font-color:", "text-color:"], answer: "color:" },
      { question: "Which HTML attribute is used to define inline styles?", options: ["style", "styles", "css"], answer: "style" },
      { question: "How do you make each word in a text start with a capital letter?", options: ["text-transform: uppercase;", "text-transform: capitalize;", "text-style: capitalize;"], answer: "text-transform: capitalize;" },
      { question: "How do you select an element with id 'header'?", options: ["#header", ".header", "header"], answer: "#header" },
      { question: "How do you select elements with class 'intro'?", options: [".intro", "#intro", "*intro"], answer: ".intro" },
      { question: "Which property is used to change the background color?", options: ["background-color", "bgcolor", "color"], answer: "background-color" },
      { question: "How do you make the text bold?", options: ["font-weight: bold;", "font-style: bold;", "text-bold: true;"], answer: "font-weight: bold;" },
      { question: "How do you make the text italic?", options: ["font-style: italic;", "font-style: oblique;", "text-style: italic;"], answer: "font-style: italic;" },
      { question: "How do you make a list not show bullet points?", options: ["list-style-type: none;", "bullets: none;", "list: none;"], answer: "list-style-type: none;" },
      { question: "How do you add a solid border of 1px black?", options: ["border: 1px solid black;", "border: solid 1px black;", "border-style: black solid 1px;"], answer: "border: 1px solid black;" },
      { question: "How do you change the font family to Arial?", options: ["font-family: Arial;", "font: Arial;", "font-type: Arial;"], answer: "font-family: Arial;" },
      { question: "How do you set the width of an element to 50%?", options: ["width: 50%;", "size: 50%;", "width=50%;"], answer: "width: 50%;" },
      { question: "Which property adds space inside an element?", options: ["padding", "margin", "spacing"], answer: "padding" },
      { question: "Which property adds space outside an element?", options: ["margin", "padding", "border-spacing"], answer: "margin" },
    ],
    medium: [
      { question: "How do you apply multiple classes to one element?", options: [".class1.class2", "class='class1 class2'", "class1,class2"], answer: "class='class1 class2'" },
      { question: "What does the float property do?", options: ["Floats element left or right", "Adds floating animation", "Wraps text"], answer: "Floats element left or right" },
      { question: "How do you center a block-level element?", options: ["margin: 0 auto;", "text-align: center;", "align: center;"], answer: "margin: 0 auto;" },
      { question: "What does z-index control?", options: ["Stack order", "Opacity", "Font weight"], answer: "Stack order" },
      { question: "How do you select the first child of a parent?", options: [":first-child", ":first", ":child:first"], answer: ":first-child" },
      { question: "Which unit is relative to font-size?", options: ["em", "px", "pt"], answer: "em" },
      { question: "How to make an element semi-transparent?", options: ["opacity: 0.5;", "transparent: 0.5;", "fade: 50%;"], answer: "opacity: 0.5;" },
      { question: "How to set a fixed width and auto height?", options: ["width:200px; height:auto;", "fixed-width:auto;", "auto;width:200px;"], answer: "width:200px; height:auto;" },
      { question: "How to apply a style only when mouse hovers?", options: [":hover", ":mouse", ":focus:hover"], answer: ":hover" },
      { question: "What property controls spacing within inline elements?", options: ["letter-spacing", "word-spacing", "text-spacing"], answer: "letter-spacing" },
      { question: "Which layout uses grid-template-rows and columns?", options: ["CSS Grid", "Flexbox", "Box Model"], answer: "CSS Grid" },
      { question: "How to set the background image to cover entire container?", options: ["background-size: cover;", "background-fit: full;", "background: cover;"], answer: "background-size: cover;" },
      { question: "What is the shorthand for padding-top and padding-bottom?", options: ["padding: top bottom;", "padding: tb;", "padding: y;"], answer: "padding: top bottom;" },
      { question: "How to hide an element visually but remain accessible?", options: ["visibility: hidden;", "display: none;", "opacity: 0;"], answer: "visibility: hidden;" },
      { question: "Which display value lays items in a row?", options: ["inline-flex", "block", "inline-block"], answer: "inline-flex" },
    ],
    hard: [
      { question: "Whatâ€™s the difference between em and rem units?", options: ["em depends on parent font-size, rem on root", "Both are same", "rem depends on parent"], answer: "em depends on parent font-size, rem on root" },
      { question: "How to define a grid with 3 columns equally spaced?", options: ["grid-template-columns: repeat(3, 1fr);", "columns:3 auto;", "grid:3fr;"], answer: "grid-template-columns: repeat(3, 1fr);" },
      { question: "Explain flex-grow vs. flex-shrink?", options: ["flex-grow expands, flex-shrink contracts", "Both expand", "Both contract"], answer: "flex-grow expands, flex-shrink contracts" },
      { question: "What property prevents flex items from wrapping?", options: ["flex-wrap: nowrap;", "wrap: no;", "nowrap: true;"], answer: "flex-wrap: nowrap;" },
      { question: "What is the default flex-direction?", options: ["row", "column", "column-reverse"], answer: "row" },
      { question: "How to create a CSS variable?", options: ["--main-color: blue;", "var main-color = blue;", "css-variable:blue;"], answer: "--main-color: blue;" },
      { question: "How to reference a CSS variable?", options: ["var(--main-color)", "var(main-color)", "--main-color"], answer: "var(--main-color)" },
      { question: "What does will-change property optimize?", options: ["Animation performance", "Rendering content", "Font loading"], answer: "Animation performance" },
      { question: "How to define a fallback font in font-family?", options: ["font-family: 'Roboto', sans-serif;", "font-family: Roboto, fallback;", "font: Roboto fallback;"], answer: "font-family: 'Roboto', sans-serif;" },
      { question: "Whatâ€™s the purpose of ::after pseudoâ€‘element?", options: ["Insert content after selected element", "After tag styling", "Add background after"], answer: "Insert content after selected element" },
      { question: "How do you disable text selection on an element?", options: ["user-select: none;", "selectable: false;", "pointer-events: none;"], answer: "user-select: none;" },
      { question: "How to make a flex container fill minimized space?", options: ["flex: 1 1 auto;", "flex: auto;", "flex-fill: yes;"], answer: "flex: 1 1 auto;" },
      { question: "What applies blend modes between background and foreground?", options: ["mix-blend-mode", "background-blend-mode", "blend: overlay"], answer: "mixâ€‘blendâ€‘mode" },
      { question: "What media query sets styles for printed pages?", options: ["@media print { }", "@media screen and print", "@media all"], answer: "@media print { }" },
    ],
  },
  javascript: {
     easy: [
      { question: "What does JS stand for?", options: ["JavaScript", "Java Source", "Just Script"], answer: "JavaScript" },
      { question: "How do you write 'Hello World' in an alert box?", options: ["alert('Hello World');", "msg('Hello World');", "console.log('Hello World');"], answer: "alert('Hello World');" },
      { question: "Which symbol is used for comments in JavaScript?", options: ["//", "/*", "#"], answer: "//" },
      { question: "How do you create a function named myFunction?", options: ["function myFunction()", "def myFunction()", "func myFunction()"], answer: "function myFunction()" },
      { question: "How do you call a function named myFunction?", options: ["myFunction()", "call myFunction()", "Run myFunction()"], answer: "myFunction()" },
      { question: "How to create a variable 'x' with the value 5?", options: ["var x = 5;", "x := 5;", "int x = 5;"], answer: "var x = 5;" },
      { question: "Which operator is used for strict equality?", options: ["===", "==", "="], answer: "===" },
      { question: "How do you add a comment with multiple lines?", options: ["/* comment */", "// comment", "<!-- comment -->"], answer: "/* comment */" },
      { question: "Which method is used to get an HTML element by ID?", options: ["document.getElementById()", "document.getElementsById()", "getElementById()"], answer: "document.getElementById()" },
      { question: "How do you round a number up?", options: ["Math.ceil()", "Math.floor()", "Math.round()"], answer: "Math.ceil()" },
      { question: "How do you find the length of an array 'arr'?", options: ["arr.length", "arr.size", "arr.count"], answer: "arr.length" },
      { question: "How do you write a conditional for x equal to 10?", options: ["if (x === 10)", "if x == 10", "if x = 10"], answer: "if (x === 10)" },
      { question: "How do you add an element to the end of an array 'arr'?", options: ["arr.push(item)", "arr.add(item)", "arr.append(item)"], answer: "arr.push(item)" },
      { question: "Which keyword is used to declare a constant?", options: ["const", "let", "var"], answer: "const" },
      { question: "How do you convert a string '123' to integer?", options: ["parseInt('123')", "Number('123')", "toInteger('123')"], answer: "parseInt('123')" },
    ],
    medium: [
      { question: "How do you declare a blockâ€‘scoped variable?", options: ["let", "var", "const"], answer: "let" },
      { question: "Which method filters array values?", options: ["filter()", "map()", "reduce()"], answer: "filter()" },
      { question: "What's the result of typeof NaN?", options: ["number", "NaN", "undefined"], answer: "number" },
      { question: "How to parse JSON string to object?", options: ["JSON.parse()", "JSON.object()", "ParseJSON()"], answer: "JSON.parse()" },
      { question: "Which function executes after a delay?", options: ["setTimeout()", "setInterval()", "delay()"], answer: "setTimeout()" },
      { question: "How do you handle promise rejection?", options: [".catch()", ".then()", ".error()"], answer: ".catch()" },
      { question: "Which keyword helps wait for promise?", options: ["await", "async", "pause"], answer: "await" },
      { question: "How to copy an object shallowly?", options: ["{...obj}", "obj.copy()", "Object.clone()"], answer: "{...obj}" },
      { question: "What does === compare?", options: ["Value and type", "Value only", "Reference"], answer: "Value and type" },
      { question: "How to remove whitespace around a string?", options: ["trim()", "strip()", "slice()"], answer: "trim()" },
      { question: "Which event occurs when page loads completely?", options: ["window.onload", "document.onload", "element.onload"], answer: "window.onload" },
      { question: "How do you check if item exists in array?", options: ["includes()", "contains()", "exists()"], answer: "includes()" },
      { question: "How to convert to number explicitly?", options: ["Number()", "parse()", "toNumber()"], answer: "Number()" },
      { question: "What keyword declares a constant reference?", options: ["const", "let", "var"], answer: "const" },
    ],
    hard: [
      { question: "What's the difference between call and apply?", options: ["apply takes args as array", "call takes args as array", "Theyâ€™re same"], answer: "apply takes args as array" },
      { question: "Describe event delegation strategy?", options: ["Attach one handler to parent and check target", "Attach handlers to each child", "Use global listener"], answer: "Attach one handler to parent and check target" },
      { question: "What does 'this' refer to in arrow functions?", options: ["Lexical this of containing scope", "Global object", "Function itself"], answer: "Lexical this of containing scope" },
      { question: "How to implement deep copy of object?", options: ["structuredClone()", "Object.assign()", "JSON.parse(JSON.stringify())"], answer: "structuredClone()" },
      { question: "Which RegExp matches only digits?", options: ["/^\\d+$/", "/^\\w+$/", "/^\\D+$/"], answer: "/^\\d+$/" },
      { question: "Difference between Map and WeakMap?", options: ["WeakMap keys are garbageâ€‘collected", "Map is unordered", "WeakMap copy keys"], answer: "WeakMap keys are garbageâ€‘collected" },
      { question: "What is a closure?", options: ["Function with preserved outer variables", "Just inner function", "Anonymous function"], answer: "Function with preserved outer variables" },
      { question: "How to combine multiple promises?", options: ["Promise.all()", "Promise.race()", "Promise.any()"], answer: "Promise.all()" },
      { question: "What does async/await do?", options: ["Simplifies promise syntax", "Blocks thread", "Makes code synchronous"], answer: "Simplifies promise syntax" },
      { question: "Which defines class in ES6?", options: ["class MyClass {}", "function MyClass {}", "define class MyClass"], answer: "class MyClass {}" },
      { question: "Whatâ€™s dynamic import syntax?", options: ["import('module.js')", "load('module.js')", "require('module.js')"], answer: "import('module.js')" },
      { question: "What are generators in JS?", options: ["Functions that can pause execution", "Arrow functions", "Callback functions"], answer: "Functions that can pause execution" },
      { question: "What is Symbol type used for?", options: ["Unique identifiers", "Strings", "Numbers"], answer: "Unique identifiers" },
      { question: "Explain prototypal inheritance?", options: ["Objects inherit via prototype chain", "Classes only", "Functions share prototypes"], answer: "Objects inherit via prototype chain" },
    ],
  },
  python: {
    easy: [
      { question: "What is the correct file extension for Python files?", options: [".py", ".pt", ".pp"], answer: ".py" },
      { question: "How do you insert COMMENTS in Python code?", options: ["# This is comment", "// This is comment", "<!-- This is comment -->"], answer: "# This is comment" },
      { question: "How do you create a variable with the floating number 2.8?", options: ["x = 2.8", "x := 2.8", "float x = 2.8"], answer: "x = 2.8" },
      { question: "Which method can be used to remove whitespace from the beginning or end of a string?", options: ["strip()", "trim()", "remove()"], answer: "strip()" },
      { question: "How do you create a list in Python?", options: ["myList = [1,2,3]", "myList = (1,2,3)", "myList = {1,2,3}"], answer: "myList = [1,2,3]" },
      { question: "How do you create a dictionary?", options: ["myDict = {'key': 'value'}", "myDict = ('key','value')", "myDict = ['key', 'value']"], answer: "myDict = {'key': 'value'}" },
      { question: "How do you create a function in Python?", options: ["def myFunc():", "function myFunc():", "func myFunc():"], answer: "def myFunc():" },
      { question: "How do you call the function myFunc?", options: ["myFunc()", "call myFunc()", "execute myFunc()"], answer: "myFunc()" },
      { question: "Which keyword is used to create a class?", options: ["class", "def", "struct"], answer: "class" },
      { question: "How do you start a while loop that loops while x is less than 5?", options: ["while x < 5:", "while (x < 5)", "loop while x < 5:"], answer: "while x < 5:" },
      { question: "How do you start a for loop to iterate over list 'items'?", options: ["for item in items:", "for (item : items)", "foreach items as item"], answer: "for item in items:" },
      { question: "How do you output text to the screen in Python?", options: ["print('Hello')", "echo 'Hello'", "printf('Hello')"], answer: "print('Hello')" },
      { question: "How do you get input from the user?", options: ["input()", "scan()", "gets()"], answer: "input()" },
      { question: "How do you convert '123' to integer?", options: ["int('123')", "Integer('123')", "to_int('123')"], answer: "int('123')" },
      { question: "How do you check the data type of a variable x?", options: ["type(x)", "typeof(x)", "datacall(x)"], answer: "type(x)" },
    ],
    medium: [
      { question: "What does 'len(list)' do?", options: ["Returns count of items", "Deletes items", "Lists them"], answer: "Returns count of items" },
      { question: "How to iterate items with index?", options: ["enumerate(list)", "items()", "index(list)"], answer: "enumerate(list)" },
      { question: "How to catch exceptions?", options: ["try/except", "try/catch", "begin/rescue"], answer: "try/except" },
      { question: "What does list comprehension produce?", options: ["New list", "Set", "Dictionary"], answer: "New list" },
      { question: "How to open file for writing?", options: ["open('file.txt', 'w')", "open('file.txt', 'r')", "open('file.txt', 'a')"], answer: "open('file.txt', 'w')" },
      { question: "What does 'with' statement do?", options: ["Handles resource cleanup", "Loops file", "Imports modules"], answer: "Handles resource cleanup" },
      { question: "How to define a lambda?", options: ["lambda x: x + 1", "def lambda:", "func x -> x+1"], answer: "lambda x: x + 1" },
      { question: "How to convert list to tuple?", options: ["tuple(list)", "set(list)", "list.toTuple()"], answer: "tuple(list)" },
      { question: "How to format string with variables?", options: ["f'Hello {name}'", "'Hello {}'.format(name)", "Both"], answer: "Both" },
      { question: "How to import math module?", options: ["import math", "include math", "#import math"], answer: "import math" },
      { question: "What is recursion?", options: ["Function calling itself", "Loop", "Conditional"], answer: "Function calling itself" },
      { question: "How to check if x is in list?", options: ["x in list", "list.contains(x)", "list.has(x)"], answer: "x in list" },
      { question: "How to raise an exception?", options: ["raise ValueError()", "throw ValueError()", "error ValueError()"], answer: "raise ValueError()" },
      { question: "How to sort a list in place?", options: ["list.sort()", "sorted(list)", "list.order()"], answer: "list.sort()" },
      { question: "How to merge two dictionaries?", options: ["{**d1, **d2}", "merge(d1,d2)", "d1 + d2"], answer: "{**d1, **d2}" },
    ],
    hard: [
      { question: "What does GIL stand for?", options: ["Global Interpreter Lock", "Global Instruction Limit", "Generic Instance Lock"], answer: "Global Interpreter Lock" },
      { question: "Whatâ€™s a generator comprehension?", options: ["Uses () instead of []", "List comprehension", "Set comprehension"], answer: "Uses () instead of []" },
      { question: "What is decorators usage?", options: ["Wrap function behavior", "Implicit return", "Inline function"], answer: "Wrap function behavior" },
      { question: "Explain duck typing?", options: ["Determine type by behavior", "Strict typing", "Use classes only"], answer: "Determine type by behavior" },
      { question: "How to perform multithreading?", options: ["threading module", "multiprocessing module", "asyncio only"], answer: "threading module" },
      { question: "Which module supports JSON serialization?", options: ["json", "pickle", "yaml"], answer: "json" },
      { question: "Explain context manager protocol methods?", options: ["__enter__ and __exit__", "__init__ and __del__", "__start__ and __stop__"], answer: "__enter__ and __exit__" },
      { question: "What is monkey patching?", options: ["Modifying runtime code", "Patching OS", "Bug fixing"], answer: "Modifying runtime code" },
      { question: "How to annotate types in Python?", options: ["def fn(x: int) -> str:", "function fn(x:int):", "fn x:int -> str"], answer: "def fn(x: int) -> str:" },
      { question: "Which method returns iterator for dict keys?", options: ["dict.keys()", "dict.iterkeys()", "keys()"], answer: "dict.keys()" },
      { question: "Whatâ€™s asyncio used for?", options: ["Asynchronous concurrency", "Threading", "Multiprocessing"], answer: "Asynchronous concurrency" },
      { question: "Explain tail recursion?", options: ["Final call returns directly", "Recursive loop", "No stack"], answer: "Final call returns directly" },
      { question: "What is metaclass use?", options: ["Create classes dynamically", "Abstract base classes", "Custom exception"], answer: "Create classes dynamically" },
      { question: "Whatâ€™s importance of __slots__?", options: ["Memory optimization", "Speed up execution", "Prevent inheritance"], answer: "Memory optimization" },
    ],
  },
  c: {
     easy: [
      { question: "Who developed the C programming language?", options: ["Dennis Ritchie", "Bjarne Stroustrup", "Ken Thompson"], answer: "Dennis Ritchie" },
      { question: "Which file extension is used for C programs?", options: [".c", ".cpp", ".h"], answer: ".c" },
      { question: "How do you print 'Hello, World!' in C?", options: ["printf(\"Hello, World!\");", "cout << \"Hello, World!\";", "System.out.println(\"Hello, World!\");"], answer: "printf(\"Hello, World!\");" },
      { question: "Which header file is needed to use printf?", options: ["stdio.h", "stdlib.h", "string.h"], answer: "stdio.h" },
      { question: "How do you declare an integer variable x in C?", options: ["int x;", "x int;", "integer x;"], answer: "int x;" },
      { question: "Which symbol is used to end a statement in C?", options: [";", ":", "."], answer: ";" },
      { question: "How do you create a comment in C?", options: ["// comment", "/* comment */", "# comment"], answer: "// comment" },
      { question: "What is the entry point of a C program?", options: ["main()", "start()", "init()"], answer: "main()" },
      { question: "How do you return zero from main function?", options: ["return 0;", "exit(0);", "stop;"], answer: "return 0;" },
      { question: "How do you allocate memory for an integer pointer dynamically?", options: ["malloc(sizeof(int))", "alloc(int)", "new int"], answer: "malloc(sizeof(int))" },
      { question: "Which library is required for malloc?", options: ["stdlib.h", "stdio.h", "math.h"], answer: "stdlib.h" },
      { question: "What is the size of 'char' in bytes in standard C on most systems?", options: ["1", "2", "4"], answer: "1" },
      { question: "How do you create a block of code?", options: ["{ }", "( )", "[ ]"], answer: "{ }" },
      { question: "Which operator is used for address-of in C?", options: ["&", "*", "%"], answer: "&" },
      { question: "Which header defines size_t?", options: ["stddef.h", "stdio.h", "stdlib.h"], answer: "stddef.h" },
    ],
    medium: [
      { question: "How to declare a pointer to int?", options: ["int *p;", "pointer<int> p;", "int p*;"], answer: "int *p;" },
      { question: "What does &p represent?", options: ["Address of p", "Contents of p", "p dereferenced"], answer: "Address of p" },
      { question: "How to allocate array dynamically?", options: ["malloc(n * sizeof(int));", "new int[n];", "alloc(int,n);"], answer: "malloc(n * sizeof(int));" },
      { question: "Which function deallocates memory?", options: ["free()", "delete()", "dispose()"], answer: "free()" },
      { question: "What does sizeof operator give?", options: ["Memory size in bytes", "Number of elements", "File size"], answer: "Memory size in bytes" },
      { question: "How to read a line from stdin?", options: ["fgets()", "gets()", "scanf()"], answer: "fgets()" },
      { question: "Whatâ€™s the return type of malloc?", options: ["void*", "int*", "char*"], answer: "void*" },
      { question: "How to compare two strings?", options: ["strcmp()", "==", "equals()"], answer: "strcmp()" },
      { question: "What header needed for malloc and free?", options: ["stdlib.h", "stdio.h", "stddef.h"], answer: "stdlib.h" },
      { question: "Explain static keyword for variables?", options: ["Retains value across calls", "Local only", "Global only"], answer: "Retains value across calls" },
      { question: "Define function returning pointer to function?", options: ["int (*fn())()", "int* fn()", "pointer fn()"], answer: "int (*fn())()" },
      { question: "How to open and write to a file?", options: ["fopen(...), fprintf(...)", "open(...), write(...)", "fstream.write()"], answer: "fopen(...), fprintf(...)" },
      { question: "What does const qualifier enforce?", options: ["Read-only storage", "Read-write", "Compile-time only"], answer: "Read-only storage" },
      { question: "Whatâ€™s the difference between pointer and array?", options: ["Array name is pointer constant", "Pointer autoâ€‘resizes", "None"], answer: "Array name is pointer constant" },
      { question: "What is a segmentation fault?", options: ["Invalid memory access", "Syntax error", "Out-ofâ€‘range value"], answer: "Invalid memory access" },
    ],
    hard: [
      { question: "Difference between malloc and calloc?", options: ["calloc zeroâ€‘initializes memory", "malloc zeroâ€‘initializes", "calloc faster"], answer: "calloc zeroâ€‘initializes memory" },
      { question: "Explain undefined behavior in C?", options: ["Behavior not defined by language spec", "Runtime error", "Compileâ€‘time error"], answer: "Behavior not defined by language spec" },
      { question: "How to declare volatile variable?", options: ["volatile int x;", "int volatile;", "Both"], answer: "Both" },
      { question: "What are function pointers used for?", options: ["Callback functions", "Arithmetic", "Memory allocation"], answer: "Callback functions" },
      { question: "What does volatile prevent?", options: ["Compiler optimization", "Runtime execution", "Memory allocation"], answer: "Compiler optimization" },
      { question: "What does restrict keyword do?", options: ["Optimization hint for pointers", "Restricts visibility", "Limits loops"], answer: "Optimization hint for pointers" },
      { question: "How to use union?", options: ["union { int i; float f; } u;", "struct union", "union u = {â€¦};"], answer: "union { int i; float f; } u;" },
      { question: "Explain pointer arithmetic rules?", options: ["Moves by element size", "Moves by byte", "Undefined"], answer: "Moves by element size" },
      { question: "What is inline function?", options: ["Suggest compiler to insert code inline", "Always inline", "Never inline"], answer: "Suggest compiler to insert code inline" },
      { question: "Whatâ€™s difference between struct and union size?", options: ["Union takes largest member only", "Struct same as union", "Union adds overhead"], answer: "Union takes largest member only" },
      { question: "What is flexible array member?", options: ["Array with runtime size at end of struct", "Dynamic array", "Pointer"], answer: "Array with runtime size at end of struct" },
      { question: "Explain bit-fields in struct?", options: ["Pack bits in struct", "Floating-point only", "Array only"], answer: "Pack bits in struct" },
      { question: "Purpose of static inline in header?", options: ["Avoid multiple definition errors", "Static memory only", "Optimize linking"], answer: "Avoid multiple definition errors" },
      { question: "What are volatile and const combined used for?", options: ["Memory-mapped hardware I/O", "Constexpr", "Loop invariants"], answer: "Memory-mapped hardware I/O" },
    ],
  }
};
